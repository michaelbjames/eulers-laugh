--Each new term in the Fibonacci sequence is generated by adding the previous
--two terms. By starting with 1 and 2, the first 10 terms will be:

--1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

--By considering the terms in the Fibonacci sequence whose values do not
--exceed four million, find the sum of the even-valued terms.

module Main where

memoized_fib :: Int -> Integer
memoized_fib = (map fib [0 ..] !!)
   where fib 0 = 1
         fib 1 = 1
         fib n = memoized_fib (n-2) + memoized_fib (n-1)

-- Trying [1..] did not work...GHC was not lazy about the map
even_fibs = [x | x <- map (memoized_fib) [1..300], x < 4000000, mod x 2 == 0]

main = do
  print even_fibs
  print $ foldr (+) 0 even_fibs